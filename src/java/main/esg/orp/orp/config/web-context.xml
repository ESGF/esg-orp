<?xml version="1.0" encoding="UTF-8"?>
<!-- Top level Spring configuration file for Web MVC applications -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd">
                           
    <!-- Support for annotation-based URL to controller mappings.
	     These mappings have the same order as any explicit XML configuration. -->	
	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
    	<property name="order" value="1" />
    </bean>
                           
  	<!-- Spring handler and controller to map an HTTP request URL directly to a view with a name equal to the URL path.
	     This handler is ordered last to allow the Spring dispatcher to invoke more specific controllers first. 
		 example: http://hostname/context/home.htm > "home" logical view     
	-->
	<bean id="jspFilenameMapping" class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
		<property name="order" value="1000" />
		<property name="mappings">
			<props>
				<prop key="/**/*.htm">urlFilenameViewController</prop>
			</props>
		</property>
	</bean>
	<bean id="urlFilenameViewController" class="org.springframework.web.servlet.mvc.UrlFilenameViewController" />	

	<!-- View resolvers -->
	<!-- View resolver that maps a logical view name to a physical resource 
		 example: "home" logical view > /WEB-INF/views/jsp/home.jsp
	-->
	<bean id="viewResourceResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="order" value="1000" />
		<property name="prefix" value="/WEB-INF/views/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<!-- Message resources -->
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename">
			<value>messages</value>
		</property>
	</bean>
	
	<!-- Tiles Configurer -->
	<bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<property name="useMutableTilesContainer" value="true" />
		<property name="definitions">
			<list>
				<value>/WEB-INF/tiles-definitions.xml</value>
			</list>
		</property>
	</bean>

</beans>
