#!/bin/bash

#####
# ESG ORP
# This script is intended to be an adjunct to the esg-node script
#             (author: gavin@llnl.gov)
#****************************************************************************
#*                                                                          *
#*  Organization: Lawrence Livermore National Lab (LLNL)                    *
#*   Directorate: Computation                                               *
#*    Department: Computing Applications and Research                       *
#*      Division: S&T Global Security                                       *
#*        Matrix: Atmospheric, Earth and Energy Division                    *
#*       Program: PCMDI                                                     *
#*       Project: Earth Systems Grid (ESG) Data Node Software Stack         *
#*  First Author: Gavin M. Bell (gavin@llnl.gov)                            *
#*                                                                          *
#****************************************************************************
#*                                                                          *
#*   Copyright (c) 2009, Lawrence Livermore National Security, LLC.         *
#*   Produced at the Lawrence Livermore National Laboratory                 *
#*   Written by: Gavin M. Bell (gavin@llnl.gov)                             *
#*   LLNL-CODE-420962                                                       *
#*                                                                          *
#*   All rights reserved. This file is part of the:                         *
#*   Earth System Grid (ESG) Data Node Software Stack, Version 1.0          *
#*                                                                          *
#*   For details, see http://esg-repo.llnl.gov/esg-node/                    *
#*   Please also read this link                                             *
#*    http://esg-repo.llnl.gov/LICENSE                                      *
#*                                                                          *
#*   * Redistribution and use in source and binary forms, with or           *
#*   without modification, are permitted provided that the following        *
#*   conditions are met:                                                    *
#*                                                                          *
#*   * Redistributions of source code must retain the above copyright       *
#*   notice, this list of conditions and the disclaimer below.              *
#*                                                                          *
#*   * Redistributions in binary form must reproduce the above copyright    *
#*   notice, this list of conditions and the disclaimer (as noted below)    *
#*   in the documentation and/or other materials provided with the          *
#*   distribution.                                                          *
#*                                                                          *
#*   Neither the name of the LLNS/LLNL nor the names of its contributors    *
#*   may be used to endorse or promote products derived from this           *
#*   software without specific prior written permission.                    *
#*                                                                          *
#*   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS    *
#*   "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT      *
#*   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS      *
#*   FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL LAWRENCE    *
#*   LIVERMORE NATIONAL SECURITY, LLC, THE U.S. DEPARTMENT OF ENERGY OR     *
#*   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,           *
#*   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT       *
#*   LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF       *
#*   USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND    *
#*   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,     *
#*   OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT     *
#*   OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF     *
#*   SUCH DAMAGE.                                                           *
#*                                                                          *
#****************************************************************************
######


# Description: Installation of the esg ORP security infrastructure.  This
#              file is meant to be sourced by the esg-node
#              script that has the definition of checked_get(),
#              stop_tomcat(), start_tomcat(), $workdir,

openid_relying_party_dist_url="http://198.128.245.140/dist/orp/esg-orp.war"
#openid_relying_party_property_file_dist_url="http://198.128.245.140/dist/orp/esg-orp.properties"
openid_relying_party_app_home="${CATALINA_HOME}/webapps/OpenidRelyingParty"
install_logfile=${ESG_INSTALL_LOGFILE:-"/etc/esg.install_log"}

date_format=${date_format:-"+%Y_%m_%d_%H%M%S"}

orp_version=${orp_version:-"1.0.1"}

#arg (1) - install = 0 [default]
#          upgrade = 1 
setup_orp() {
    echo -n "Checking for Openid Relying Party ${orp_version}"
    check_webapp_version "OpenidRelyingParty" ${orp_version}
    local ret=$?
    ((ret == 0)) && (( ! force_install )) && echo " [OK]" && return 0

    echo
    echo "*******************************"
    echo "Setting up The OpenID Relying Party..."
    echo "*******************************"
    echo

    local upgrade=${1:-0}

    local default="Y"
    ((force_install)) && default="N"
    local dosetup
    if [ -d ${openid_relying_party_app_home} ]; then 
	echo "Detected an existing openid relying party installation..."
        read -p "Do you want to continue with openid relying party installation and setup? $([ "$default" = "N" ] && echo "[y/N]" || echo "[Y/n]") " dosetup
        [ -z "${dosetup}" ] && dosetup=${default}
	if [ "${dosetup}" != "Y" ] && [ "${dosetup}" != "y" ]; then
	    echo "Skipping node openid relying party installation and setup - will assume it's setup properly"
	    return 0
	fi
	
	local dobackup="N"
	read -p "Do you want to make a back up of the existing distribution?? [y/N] " dobackup
	if [ "${dobackup}" = "Y" ] || [ "${dobackup}" = "y" ]; then
	    echo "Creating a backup archive of this web application $openid_relying_party_app_home"
	    backup ${openid_relying_party_app_home}
	fi

	echo
    fi

    mkdir -p $workdir
    [ $? != 0 ] && return 1
    pushd $workdir >& /dev/null

    #collect the necessary resources...
    local openid_relying_party_dist_file=${openid_relying_party_dist_url##*/}
    checked_get ${openid_relying_party_dist_file} ${openid_relying_party_dist_url}
    local no_new_update=$?
    #set to the absolute file name...
    openid_relying_party_dist_file=$(readlink -f ${openid_relying_party_dist_file})

    if((upgrade)); then
	((no_new_update == 1)) && echo "nothing more to do, you are up2date" && return 1
	echo "Upgrading the OpenID Relying Party WebApp..."
    fi
    
    local endorsed_jars=endorsed.tgz
    checked_get ${endorsed_jars} ${openid_relying_party_dist_url%/*}/${endorsed_jars}
    #set to the absolute file name...
    endorsed_jars=$(readlink -f ${endorsed_jars})

    stop_tomcat

    #----------------------------
    #local fetch_file=${openid_relying_party_property_file_dist_url##*/}
    #checked_get ${fetch_file} ${openid_relying_party_property_file_dist_url}
    #
    ##NOTE: The saving of the last config file must be done *BEFORE* we untar the new distro!
    #if ((upgrade)) && [ -e WEB-INF/classes/esg/orp/orp/config/${fetch_file} ]; then
    #    cp WEB-INF/classes/${fetch_file} WEB-INF/classes/${fetch_file}.saved
    #    chmod 600 WEB-INF/classes/esg/orp/orp/config/${fetch_file}*
    #fi

    mkdir -p ${openid_relying_party_app_home}
    [ $? != 0 ] && return 1
    cd ${openid_relying_party_app_home}
    echo "Expanding war ${openid_relying_party_dist_file} in $(pwd)"
    $JAVA_HOME/bin/jar xf ${openid_relying_party_dist_file}
    [ $? != 0 ] && echo " ERROR: Could not extract the OpenID Relying Party: ${openid_relying_party_dist_file}" && popd && checked_done 1

    #----------------------------
    #Property file fetching and token replacement...
    #----------------------------
    #pushd WEB-INF/classes >& /dev/null
    #
    #cp ${fetch_file} ${fetch_file}.tmpl
    #if((upgrade)) && [ -e ${fetch_file}.saved ]; then
    #    #reuse the last properties file...
    #    #pull it out of the tar archive we made a few lines up
    #    cp ${fetch_file}.saved ${fetch_file}
    #else
    #    #----------------------
    #    #edit the property file...
    #    pwd
    #    echo -n "Replacing tokens... "
    #    eval "perl -p -i -e 's#\\@\\@keystoreFile\\@\\@#${keystore_file}#g' ${fetch_file}"; echo -n "*"
    #    eval "perl -p -i -e 's#\\@\\@keystorePassword\\@\\@#${keystore_password}#g' ${fetch_file}"; echo -n "*"
    #    eval "perl -p -i -e 's#\\@\\@keystoreAlias\\@\\@#${keystore_alias}#g' ${fetch_file}"; echo -n "*"
    #    echo " [OK]"
    #    #----------------------
    #fi
    #chown -R ${tomcat_user} ${openid_relying_party_app_home}
    #chgrp -R ${tomcat_group} ${openid_relying_party_app_home}
    #unset fetch_file
    #popd >& /dev/null
    #----------------------------
    

    if [ -d ${tomcat_install_dir}/webapps/thredds/WEB-INF/lib ]; then
        #move over SAML libraries...
        tar xzf ${endorsed_jars} -C ${tomcat_install_dir}/webapps/thredds/WEB-INF/lib
        mv -v ${tomcat_install_dir}/webapps/thredds/WEB-INF/lib/endorsed/*.jar ${tomcat_install_dir}/webapps/thredds/WEB-INF/lib/
        rmdir ${tomcat_install_dir}/webapps/thredds/WEB-INF/lib/endorsed
        chown -R ${tomcat_user}:${tomcat_group} ${tomcat_install_dir}/webapps/thredds/WEB-INF/lib
    fi

    popd >& /dev/null
    echo

    write_orp_install_log

    start_tomcat
    return 0
}

write_orp_install_log() {
    local orp_version=$(sed -n '/^Version:[ ]*\(.*\)/p' ${openid_relying_party_app_home}/META-INF/MANIFEST.MF | awk '{print $2}' | xargs)
    echo "$(date ${date_format}) webapp:OpenidRelyingParty=${orp_version} ${openid_relying_party_app_home}" >> ${install_logfile}
    dedup ${install_logfile}
    return 0
}
